@comment{

  Copyright 2011 JBoss Inc

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
}




@comment{

}

@declare{'treeEval'}


rule "Eval Tree Node @{context} - @{id} - Down"
salience $children.size() - $children.indexOf( $child )
dialect "mvel"
when
    $node : TreeNode( context == "@{context}", $id : id == "@{id}", $out : outcome, $master : parent, $children : children, children.size > 0 )
    $tok  : @{context}TreeToken( context == "@{context}", current == "@{id}", $trail : trail,
                                 @{constraints} )
    $child : String( this not memberOf $trail ) from $children
then
    System.out.println( "Im here at @{id}, going down to " + $child );
    $trail.add( $child );
    modify ( $tok ) {
        setCurrent( $child );
    }
end


rule "Eval Tree Node @{context} - @{id} - At"
salience 2
when
    $node : TreeNode( context == "@{context}", $id : id == "@{id}", $out : outcome, $master : parent )
    $tok  : @{context}TreeToken( context == "@{context}", current == "@{id}", $trail : trail,
                                 @{constraints}, $res : results, results.keySet not contains "@{id}" )
then
    $res.put( "@{id}", $out );

    System.out.println( "I'm here at @{id} !!!! @{constraints.replace("\"","")}" );
end


rule "Eval Tree Node @{context} - @{id} - True" extends "Eval Tree Node @{context} - @{id} - At"
salience 3
when
    TreeNode( this == $node, children.size == 0 )
then
    $res.put( "@{id}", "" );
    System.out.println( "Solution found at @{id} !!!! " );
    @{name} x = new @{name}();
            x.setContext( "@{context}" );
            x.setValid( true );
            x.setMissing( false );
            x.setValue( $out );
    insertLogical(x);
end




rule "Eval Tree Node @{context} - @{id} - Up"
when
    $node : TreeNode( context == "@{context}", $id : id == "@{id}", $out : outcome, $master : parent )
    $tok  : @{context}TreeToken( context == "@{context}", current == "@{id}", $trail : trail )
    not @{name}( context == "@{context}" )
then
    modify ( $tok ) {
        setCurrent( $master );
    }
    System.out.println( "Im here at @{id}, going back up to " + $master );
end






@end{}


@includeNamed{'treeEval'}