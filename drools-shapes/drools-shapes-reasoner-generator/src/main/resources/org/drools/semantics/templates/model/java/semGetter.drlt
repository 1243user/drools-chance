@comment{
/*
 * Copyright 2011 JBoss Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

}


@declare{'semGetter'}


    @Transient
    public java.util.Set<@{ typeName }> @{ name }() {
        java.util.Set<@{ typeName }> set = new java.util.HashSet<@{ typeName }>();

        set.addAll( @{getter}() );

        @foreach{ prop : restrictions }
            @if{ prop.collection }
                set.addAll( @{prop.getter}() );
            @else{}
                set.add( @{prop.getter}() );
            @end{}
        @end{}

        @foreach{ prop : restrictions }
            @if{ prop.minCard > 0 }
            {
                int j = 0;
                for ( @{ typeName } y : set ) {
                    if ( y instanceof @{prop.typeName} ) {
                        j++;
                    }
                }
                for ( int k = j; k < @{prop.minCard}; k++ ) {
                    set.add(  @{ skolem( prop.target ) } );
                }
            }
            @else{}
                for ( @{ typeName } y : set ) {
                    if ( y instanceof @{prop.typeName} ) {
                        // exception?
                    }
                }
            @end{}
        @end{}

        return set;
    }


@end{}

@includeNamed{'semGetter'}





