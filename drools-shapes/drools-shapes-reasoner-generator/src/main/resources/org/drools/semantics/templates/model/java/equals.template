
@declare{'equalsTemplate'}

    public boolean equals(Object object) {

        if ( super.equals( object ) ) {
            return true;
        }

        final org.jvnet.jaxb2_commons.lang.EqualsStrategy strategy =  org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }



    public boolean equals(org.jvnet.jaxb2_commons.locator.ObjectLocator thisLocator, org.jvnet.jaxb2_commons.locator.ObjectLocator thatLocator, Object object, org.jvnet.jaxb2_commons.lang.EqualsStrategy strategy) {
            if (!(object instanceof @{klassName})) {
                    return false;
                }
                if (this == object) {
                    return true;
                }

                final @{klassName} that = ((@{klassName}) object);

                @foreach{ k : keys }
                {
                    java.util.List<@{k.type}> lhs@{compactUpperCase(k.name)};
                    lhs@{compactUpperCase(k.name)} = (this.isSet@{compactUpperCase(k.name)}()?this.get@{compactUpperCase(k.name)}():null);
                    java.util.List<@{k.type}> rhs@{compactUpperCase(k.name)};
                    rhs@{compactUpperCase(k.name)} = (that.isSet@{compactUpperCase(k.name)}()?that.get@{compactUpperCase(k.name)}():null);
                    if (!strategy.equals(org.jvnet.jaxb2_commons.locator.util.LocatorUtils.property(thisLocator, "@{k.name}", lhs@{compactUpperCase(k.name)}), org.jvnet.jaxb2_commons.locator.util.LocatorUtils.property(thatLocator, "@{k.name}", rhs@{compactUpperCase(k.name)}), lhs@{compactUpperCase(k.name)}, rhs@{compactUpperCase(k.name)})) {
                        return false;
                    }
                }
                @end{}

                return true;
            }


@end{}


@includeNamed{'equalsTemplate'}