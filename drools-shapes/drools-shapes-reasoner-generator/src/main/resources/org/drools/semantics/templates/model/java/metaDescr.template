
@declare{'metaDescrTemplate'}

    @javax.persistence.Transient
    public String getSemanticTypeName() {
        return "@{typeName}";
    }

    @javax.xml.bind.annotation.XmlTransient
    private java.util.List<String> propertyNames = java.util.Arrays.asList( @foreach{ prop : propertyNames } "@{prop}" @end{","} );

    @javax.persistence.Transient
    public java.util.List<String> getPropertyNames() {
        return propertyNames;
    }


    @javax.persistence.Transient
    public java.util.List get( String name ) {
        return get( name, true );
    }

    @javax.persistence.Transient
    public java.util.List get( String name, boolean inferred ) {
        int index = propertyNames.indexOf( name );
        @code{ int j = 0; }
        switch ( index ) {
            @foreach{ prop : propertyNames }
              case @{j++} : return inferred ? @{ getter( prop, "java.util.List" ) }Inferred() : @{ getter( prop, "java.util.List" ) }();
            @end{}
            default : return java.util.Collections.emptyList();
        }
    }

@end{}


@includeNamed{'metaDescrTemplate'}