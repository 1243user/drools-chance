
@declare{'hashKyTemplate'}

    public int hashCode() {
        @if{ keys.length == 0 }
            return super.hashCode();
        @else{}
            if ( hasKeys() ) {
                final org.jvnet.jaxb2_commons.lang.HashCodeStrategy strategy = org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy.INSTANCE;
                return this.hashCode(null, strategy);
            } else {
                return super.hashCode();
            }
        @end{}
    }

     public int hashCode(org.jvnet.jaxb2_commons.locator.ObjectLocator locator,  org.jvnet.jaxb2_commons.lang.HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode( locator, strategy );
            
            @foreach{ k : keys }
            {
                Object the@{compactUpperCase(k.name)} = (this.isSet@{compactUpperCase(k.name)}()?this.get@{compactUpperCase(k.name)}():null);
                currentHashCode = strategy.hashCode(org.jvnet.jaxb2_commons.locator.util.LocatorUtils.property(locator, "@{k.name}", the@{compactUpperCase(k.name)}), currentHashCode, the@{compactUpperCase(k.name)});
            }
            @end{}

        return currentHashCode;
     }

     public boolean hasKeys() {
        @foreach{ k : keys }
            if ( ! this.isSet@{compactUpperCase(k.name)}() ) { return false; }
        @end{}
        return true;
     }

@end{}


@includeNamed{'hashKyTemplate'}