
@declare{'equalsTemplate'}

    public boolean equals(java.lang.Object object) {
        @if{ keys.length == 0 }
            return super.equals( object );
        @else{}
            if ( hasKeys() ) {
                final org.jvnet.jaxb2_commons.lang.EqualsStrategy strategy =  org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy.INSTANCE;
                return equals(null, null, object, strategy);
            } else {
                return super.equals( object );
            }
        @end{}


    }



    public boolean equals(org.jvnet.jaxb2_commons.locator.ObjectLocator thisLocator, org.jvnet.jaxb2_commons.locator.ObjectLocator thatLocator, Object object, org.jvnet.jaxb2_commons.lang.EqualsStrategy strategy) {
        if ( this == object ) { return true; }
        if ( ! super.equals( thisLocator, thatLocator, object, strategy ) ) { return false; }

        if ( ! ( object instanceof @{klassName} ) ) { return false; }

        @if{ keys.length > 0 }
            final @{klassName} that = ((@{klassName}) object);
        @end{}

                @foreach{ k : keys }
                {
                    java.lang.Object lhs@{compactUpperCase(k.name)} = (this.isSet@{compactUpperCase(k.name)}()?this.get@{compactUpperCase(k.name)}():null);
                    java.lang.Object rhs@{compactUpperCase(k.name)} = (that.isSet@{compactUpperCase(k.name)}()?that.get@{compactUpperCase(k.name)}():null);
                    if (!strategy.equals(org.jvnet.jaxb2_commons.locator.util.LocatorUtils.property(thisLocator, "@{k.name}", lhs@{compactUpperCase(k.name)}), org.jvnet.jaxb2_commons.locator.util.LocatorUtils.property(thatLocator, "@{k.name}", rhs@{compactUpperCase(k.name)}), lhs@{compactUpperCase(k.name)}, rhs@{compactUpperCase(k.name)})) {
                        return false;
                    }
                }
                @end{}

        return true;
    }


@end{}


@includeNamed{'equalsTemplate'}