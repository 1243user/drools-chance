@comment{
/*
 * Copyright 2011 JBoss Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

}


@declare{'restrictedAddRemove'}


    @@javax.persistence.Transient
    public void add@{ capitalize( name ) }( @{ map( type, true ) } x ) {

        @if{ simple }
            @{ compactVariable( name ) } = ( @{ map( type, true ) } ) x;
        @elseif{ ! primitive }
            add@{ capitalize( base ) }( (java.lang.Object) x );
        @else{}
            @{ getter( base, type ) }().add( x );
        @end{}

    }

    @@javax.persistence.Transient
    public void remove@{ capitalize( name ) }( java.lang.Object x ) {
        @if{ simple }
            @{ compactVariable( name ) } = null;
        @else{}
            @{ getter( base, type ) }().remove( x );
        @end{}
    }


@end{}

@includeNamed{'restrictedAddRemove'}





