package $packageName;

import org.drools.drools_shapes.terms.ConceptDescriptor;
import org.drools.shapes.terms.generator.CD;

import java.net.URI;

public class CodeFactory implements org.drools.shapes.terms.CodeFactory {

    private static final CodeFactory singleton = new CodeFactory();

    @Override
    public ConceptDescriptor buildCode( URI URI, String code, String codeName, String codeSystem, String codeSystemName ) {
        return new CD( URI, code, codeName, codeSystem, codeSystemName );
    }

    @Override
    public ConceptDescriptor buildCode( String code, String codeName, String codeSystem, String codeSystemName ) {
        return new CD( VocabularyCatalog.get().resolveCode( codeSystem, code ), code, codeName, codeSystem, codeSystemName );
    }

    @Override
    public ConceptDescriptor buildCode( String code, String codeName, ConceptDescriptor codeSystem ) {
        return new CD( VocabularyCatalog.get().resolveCode( codeSystem.getCode(), code ), code, codeName, codeSystem.getCode(), codeSystem.getDisplayName() );
    }

    public static CodeFactory get() {
        return singleton;
    }
}
