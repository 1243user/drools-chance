package org.drools.beliefs.provenance;

import org.test.*;
import com.foo.*;
import org.drools.core.metadata.*;
import org.drools.beliefs.provenance.annotations.*;
import static org.drools.core.metadata.With.with;
import java.util.*;

import static com.foo.MetaFactory.*;
import static org.test.MetaFactory.*;


global List list;

rule Init
when
then
    infer( newMyKlass( "123" ) );
    infer( newMyTargetKlass( "000" ) );
    infer( newMyTargetKlass( "001" ) );
    infer( newMyTargetKlass( "002" ) );
end

rule Linkage
when
    $k : MyKlass()
         accumulate( $t : MyTargetKlass(), $l : collectList( $t ) )
then
    System.out.println( "Found list " + $l );
    infer( modifyMyKlass( $k, with( $l ) )
                    .links( $l, Lit.SET ) );
end


rule Detect
when
    $x : MyTargetKlass( $in : linkedBy )
    $y : MyKlass() from $in
then
    System.out.println( "React to " + ((Identifiable) $x).getUri() );
    list.add( ((Identifiable) $x).getUri().toString() );
end