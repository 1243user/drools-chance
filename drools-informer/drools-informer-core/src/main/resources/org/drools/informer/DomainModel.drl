/*
 * Copyright 2011 JBoss Inc
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.drools.informer

import org.apache.commons.beanutils.PropertyUtils;

import org.drools.informer.domain.DomainModelSupport;

rule "derive answerType from the underlying domain model if it isn't specified"
when
	$question : Question(questionId : id, answerType == null);
	association : DomainModelAssociation(questionId == questionId);
then
	Class propertyClass = PropertyUtils.getPropertyType(association.getObject(), association.getProperty());
	$question.setAnswerType(DomainModelSupport.classToAnswerType(propertyClass));
	update($question);
end

rule "copy answers from the underlying domain model to the questions"
no-loop
salience 6
when
	$question : Question(questionId : id, answerType != null, ans : answer, $last : lastAnswer )
	association : DomainModelAssociation(questionId == questionId, lastAnswer == $last, object : object)
	obj : Object( this == object )
then
	Object propertyValue = PropertyUtils.getProperty(association.getObject(), association.getProperty());
	Object answer = DomainModelSupport.objectToAnswer(propertyValue, $question.getBasicAnswerType());

	if (answer == null ? $question.getAnswer() != null : !answer.equals($question.getAnswer())) {
		$question.setAnswer(answer);

		association.setLastAnswer(answer);

		update($question);
		update(association);
	}

end


//rule "init questions from the underlying domain model"
//no-loop
//salience 7
//when
//	$question : Question(questionId : id, answerType != null, ans : lastAnswer == null )
//	association : DomainModelAssociation( questionId == questionId, lastAnswer != null, lastAnswer != ans , object : object)
//	obj : Object( this == object )
//then
//	Object propertyValue = PropertyUtils.getProperty(association.getObject(), association.getProperty());
//	Object answer = DomainModelSupport.objectToAnswer(propertyValue, $question.getBasicAnswerType());
//
//	$question.setAnswer(answer);
//
//	update($question);
//end


rule "copy question answers to the underlying domain model"
salience 7
no-loop
when
	$question : Question(questionId : id, answerType != null, answer : answer != null);
	association : DomainModelAssociation(questionId == questionId, object : object, property : property, lastAnswer != answer);
then
//    System.out.println("Updating " + $question + " from  " + association );
    retract(object);
	Class propertyClass = PropertyUtils.getPropertyType(object, property);
	Object propertyValue = DomainModelSupport.answerToObject($question.getBasicAnswerType(), answer, propertyClass);
	Object oldPropertyValue = PropertyUtils.getProperty(object, property);
	PropertyUtils.setProperty(object, property, propertyValue);

	association.setLastAnswer(answer);

    insert(object);
    update(association);

end


rule "Cleanup ununsed associations"
salience 8
when
    $assoc : DomainModelAssociation( $id : questionId, $obj : object )
    (not Question( id == $id )
     or
     not Object( this == $obj )
    )
then
    retract($assoc);
end
