/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 *
 * Copyright 2011 JBoss Inc
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.drools.chance.test;

import org.drools.factmodel.traits.Traitable;

import org.drools.chance.factmodel.Imperfect;
import org.drools.chance.factmodel.LinguisticPartition;

import de.lab4inf.fuzzy.FuzzySet;
import de.lab4inf.fuzzy.polygons.FuzzyTriangle;

import org.drools.chance.degree.Degree;
import org.drools.chance.reteoo.ChanceActivation;
import org.drools.chance.ChanceHelper;


global java.util.Map map;

    /*

       SLIM      FAT
  1.0    | \     / |
         |   \ /   |
         |   / \   |
  0.0    | /     \ |
       --------------->
         0         100
    */


declare enum Weight
@LinguisticPartition

	SLIM( "slim", new de.lab4inf.fuzzy.polygons.FuzzyTriangle( -0.01, 0, 100 ) ),

	FAT( "fat", new de.lab4inf.fuzzy.polygons.FuzzyTriangle( 0, 100, 100.01 ) );

    label : String

    set   : FuzzySet

end


declare Imperson

	name    : String    = "john/0.3, philip/0.7"
	                @Imperfect( kind=ImpKind.PROBABILITY, type=ImpType.DISCRETE, degree=DegreeType.SIMPLE )

    body    : Weight
                    @Imperfect( kind=ImpKind.FUZZINESS, type=ImpType.LINGUISTIC, degree=DegreeType.SIMPLE, support="weight" )

    weight  : Double    = 65.0

end

rule "Init"
when
then
    insert( new Imperson( ) );
end



rule "Fuzzy Rule with Facts"
salience 100
dialect "mvel"
when
    $b : Imperson( name == "philip", body ~is Weight.FAT, body ~is Weight.SLIM )
            @Imperfect( kind=ImpKind.FUZZINESS, type=ImpType.LINGUISTIC, family=MvlFamilies.LUKAS, degree=DegreeType.SIMPLE )
then
    System.err.println(">>> " + drools);
    Degree x = chance.degree;
    System.out.println( "X " + x );  // 0.15
    map.put( "X", x.getValue() );
end











declare CoreX
@Traitable
    name    : String    = "philip"

    weight  : Double    = 65.0

end


declare trait ImpersonTrait

	name    : String
	                @Imperfect( kind=ImpKind.PROBABILITY, type=ImpType.DISCRETE, degree=DegreeType.SIMPLE )

    body    : Weight
                    @Imperfect( kind=ImpKind.FUZZINESS, type=ImpType.LINGUISTIC, degree=DegreeType.SIMPLE, support="weight" )

    weight  : Double

end

rule "Init2"
when
then
    insert( new CoreX() );
end

rule "Don"
no-loop
when
    $c : CoreX()
then
    don( $c, ImpersonTrait.class );
end



rule "Fuzzy Rule with Traits"
dialect "mvel"
when
    $b : ImpersonTrait( name == "philip", body ~is Weight.FAT, body ~is Weight.SLIM )
            @Imperfect( kind=ImpKind.FUZZINESS, type=ImpType.LINGUISTIC, family=MvlFamilies.GODEL, degree=DegreeType.SIMPLE )
then
    Degree x = chance.degree;
    System.out.println( "Y " + x );  // 0.5
    map.put( "Y", x.getValue() );
end
