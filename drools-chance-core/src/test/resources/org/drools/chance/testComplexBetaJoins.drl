/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 *
 * Copyright 2011 JBoss Inc
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.drools.chance.test;

import org.drools.chance.factmodel.Imperfect;
import org.drools.chance.factmodel.LinguisticPartition;

import de.lab4inf.fuzzy.FuzzySet;
import de.lab4inf.fuzzy.polygons.FuzzyTriangle;

import org.drools.chance.degree.Degree;


import java.util.Map;

global java.util.Map map;




declare Imperson
    id      : String

	name    : String        = "john/0.3, philip/0.7"
	                    @Imperfect( kind=ImpKind.PROBABILITY, type=ImpType.DISCRETE, degree=DegreeType.SIMPLE )
    age     : Integer       = "18/0.4,19/0.5,20/0.1"
                        @Imperfect( kind=ImpKind.PROBABILITY, type=ImpType.DISCRETE, degree=DegreeType.SIMPLE )
    height  : Integer       = "160/0.3,170/0.5,180/0.2"
                        @Imperfect( kind=ImpKind.PROBABILITY, type=ImpType.DISCRETE, degree=DegreeType.SIMPLE ) 
    weight  : Integer       = "100/0.05,150/0.05,175/0.9"
                        @Imperfect( kind=ImpKind.PROBABILITY, type=ImpType.DISCRETE, degree=DegreeType.SIMPLE )
    width   : Integer       = 165                                                           
end




rule "Init"
when
then
    Imperson i1 = new Imperson();
        i1.setId( "x1" );
    Imperson i2 = new Imperson();
        i2.setId( "x2" );
    insert( i1 );
    insert( i2 );
end



// weight > $h : 0.9 x 0.3 + 0.9 x 0.5  = 0.6
// weight < $h : 0.9 x 0,2 = 0,1

rule "Complex formula"
when
    $x1 : Imperson( $id1 : id, $h : height )
    $x2 : Imperson( $id2 : id != $id1 && ( weight ~> $h || weight ~< $h ) )
then
    Degree x = chance.getDegree();
    System.out.println( "X"  + $id1 + " " +  x );  // 0.7
    map.put( "X" + $id1, x.getValue() );
end


rule "Explicit ops"
when
    $x1 : Imperson( $id1 : id, $h : height )
    and
    $x2 : Imperson( $id2 : id != $id1, weight ~> $h )
then
    Degree x = chance.getDegree();
    System.out.println( "Y"  + $id1 + " " +  x );  // 0.6
    map.put( "Y" + $id1, x.getValue() );
end

