/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 *
 * Copyright 2011 JBoss Inc
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.drools.chance.test;

import org.drools.chance.factmodel.Imperfect;
import org.drools.chance.factmodel.LinguisticPartition;

import de.lab4inf.fuzzy.FuzzySet;
import de.lab4inf.fuzzy.polygons.FuzzyTriangle;

import org.drools.chance.degree.Degree;
import org.drools.chance.reteoo.ChanceActivation;

import java.util.Map;

global java.util.Map map;




declare Imperson
    id      : String

	name    : String        = "john/0.3, philip/0.7"
	                    @Imperfect( kind=ImpKind.PROBABILITY, type=ImpType.DISCRETE, degree=DegreeType.SIMPLE )
end


query perf( String $id, String $name, Imperson $x )
    $x := Imperson( $id := id ; name == $name )
end

query imp( String $id, String $name, Imperson $x )
    $x := Imperson( $id := id ; name ~== $name )
end

query imp2( String $id, String $name, Imperson $x )
    $x := Imperson( $id := id ; name ~== $name )
end


rule "Init"
when
then
    Imperson i1 = new Imperson();
        i1.setId( "x1" );
    insert( i1 );

    insert( "x1" );
end



rule "Perfect Query"
when
    $x  : String( )
    ?perf( "x1", "philip", $imp ; )
then
    Degree x = chance.getDegree();
    System.out.println( "X"  + x.getValue() );
    map.put( "X" + $imp.getId(), x.getValue() );
end

rule "Imperfect Query"
when
    $x  : String( )
    ?imp( "x1", "philip", $imp ; )
then
    Degree x = chance.getDegree();
    System.out.println( "Y"  + x.getValue() );
    map.put( "Y" + $imp.getId(), x.getValue() );
end


rule "Double Imperfect Query"
when
    $x  : String( )
    ?imp(  "x1", "philip", $imp ; )
    ?imp2( "x1", "philip", $imp2 ; )
then
    Degree x = chance.getDegree();
    System.out.println( "Z"  + x.getValue() );
    map.put( "Z" + $imp.getId(), x.getValue() );
end



