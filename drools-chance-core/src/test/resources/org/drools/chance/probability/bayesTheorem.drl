package org.drools.chance.probability

import org.drools.chance.factmodel.Imperfect;
import org.drools.chance.factmodel.LinguisticPartition;

import de.lab4inf.fuzzy.FuzzySet;
import de.lab4inf.fuzzy.polygons.FuzzyTriangle;

import org.drools.chance.degree.Degree;

import org.drools.chance.ChanceHelper;

global java.util.Map map;


declare Population
	prevalent       : Boolean     = "true/0.005, false/0.995"
	                @Imperfect( kind=ImpKind.PROBABILITY, type=ImpType.DISCRETE, degree=DegreeType.SIMPLE )
end

declare Imperson
@propertyReactive

    foo             : int

	hasDisease      : Boolean
	                @Imperfect( kind=ImpKind.PROBABILITY, type=ImpType.DISCRETE, degree=DegreeType.SIMPLE )
end

declare ImpLabTest
    specific        : Boolean     = "true/0.99, false/0.01"
                    @Imperfect( kind=ImpKind.PROBABILITY, type=ImpType.DISCRETE, degree=DegreeType.SIMPLE )
    sensitive       : Boolean     = "true/0.99, false/0.01"
                    @Imperfect( kind=ImpKind.PROBABILITY, type=ImpType.DISCRETE, degree=DegreeType.SIMPLE )
end


rule "Init"
when
then
    insert( new Population() );
    insert( new Imperson() );
    insert( new ImpLabTest() );
end


rule "Positive test"
// disease detected by the test
when
    $pop : Population( prevalent ~== true )
    and @Imperfect( family=MvlFamilies.PRODUCT, degree=DegreeType.SIMPLE )
    $imp : Imperson() @watch(!*)
    and
    $lab : ImpLabTest( sensitive ~== true )
then
    Degree deg = chance.getDegree();

    System.out.println( " ++ " + deg );
    modify ( $imp ) {
        setFoo( 1 ),  //TODO : Make extra fields work with @PS
        updateHasDiseaseValue( true, deg );
    }
end


rule "Negative test"
// no disease, even in presence of a test
when
    $pop : Population( prevalent ~== false )
    and @Imperfect( family=MvlFamilies.PRODUCT, degree=DegreeType.SIMPLE )
    $imp : Imperson() @watch(!*)
    and
    $lab : ImpLabTest( specific ~== false )
then
    Degree deg = chance.getDegree();

    System.out.println( " -- " + deg );
    modify ( $imp ) {
        setFoo( 1 ),
        updateHasDiseaseValue( false, deg );
    }
end


rule "Person Check"
salience -100
// disease, as indicated by the test
when
    $imp : Imperson( hasDisease ~== true )
then
    Degree deg = chance.getDegree();

    System.out.println( " >>>>>> " + deg );
    System.out.println( " >>>>>> " + $imp.getHasDisease() );
end



rule "Normalize"
salience -10
when
    $imp : Imperson( hasDisease.normalized == false )
then
    System.out.println( "Normalizing... " );
    modify( $imp ) {
        setFoo( 1 ),
        getHasDisease().normalize();
    }
end