/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 *
 * Copyright 2011 JBoss Inc
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.drools.chance.test;

import org.drools.chance.factmodel.Imperfect;
import org.drools.chance.factmodel.LinguisticPartition;

import de.lab4inf.fuzzy.FuzzySet;
import de.lab4inf.fuzzy.polygons.FuzzyTriangle;

import org.drools.chance.degree.Degree;
import org.drools.chance.reteoo.ChanceActivation;

import java.util.Map;

global java.util.Map map;




declare Imperson
	name    : String    = "john/0.3, philip/0.7"
	                @Imperfect( kind=ImpKind.PROBABILITY, type=ImpType.DISCRETE, degree=DegreeType.SIMPLE )
    age     : int
end

declare Imperson2
	name    : String    = "john/0.3, philip/0.2, mark/0.4, frank/0.1"
	                @Imperfect( kind=ImpKind.PROBABILITY, type=ImpType.DISCRETE, degree=DegreeType.SIMPLE )
	age     : int
end


rule "Init"
when
then
    insert( new Imperson( ) );
    insert( new Imperson2( ) );
end


rule "And 1"
when
    $x : Imperson(  name ~== "philip" )  //0.7
    and @Imperfect( family=MvlFamilies.PRODUCT )
    $y : Imperson2( name ~!= "frank" )   //0.9
    and
    $z : Imperson(  name ~== "john" )    //0.3
then
    Degree x = chance.getDegree();
    System.out.println( "X " + x );  // 0.189
    map.put( "X", x.getValue() );
end

rule "And 2"
when
    ( and @Imperfect( family=MvlFamilies.PRODUCT )
        $x : Imperson(  name ~== "philip" )  //0.7
        $y : Imperson2( name ~!= "frank" )   //0.9
    )
then
    Degree x = chance.getDegree();
    System.out.println( "Y " + x );  // 0.63
    map.put( "Y", x.getValue() );
end


rule "Or 1"
when
    $x : Imperson(  name ~== "philip" )  //0.7
    or @Imperfect( family=MvlFamilies.PRODUCT )
    $y : Imperson2( name ~!= "frank" )   //0.9
then
    Degree x = chance.getDegree();
    System.out.println( "Z" + x );  // 0.97
    map.put( "Z", x.getValue() );
end

rule "Or 2"
when
    ( or @Imperfect( family=MvlFamilies.PRODUCT )
        $x : Imperson(  name ~== "philip" )  //0.7
        $y : Imperson2( name ~!= "frank" )   //0.9
    )
then
    Degree x = chance.getDegree();
    System.out.println( "W" + x );  // 0.97
    map.put( "W", x.getValue() );
end