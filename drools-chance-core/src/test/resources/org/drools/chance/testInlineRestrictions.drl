/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 *
 * Copyright 2011 JBoss Inc
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.drools.chance.test;

import org.drools.chance.factmodel.Imperfect;
import org.drools.chance.factmodel.LinguisticPartition;

import de.lab4inf.fuzzy.FuzzySet;
import de.lab4inf.fuzzy.polygons.FuzzyTriangle;

import org.drools.chance.degree.Degree;


import java.util.Map;

global java.util.Map map;




declare Imperson
	name    : String    = "john/0.3, philip/0.2, mark/0.4, frank/0.1"
	                @Imperfect( kind=ImpKind.PROBABILITY, type=ImpType.DISCRETE, degree=DegreeType.SIMPLE )
    age     : int       = 18
end

rule "Init"
when
then
    insert( new Imperson() );
end



rule "Crisp version"
when
    $b : Imperson( name == "philip" || == "mark" || == "frank" )
then
    Degree x = chance.getDegree();
    System.out.println( "X " + x );  // 1.0
    map.put( "X", x.getValue() );
end


rule "Crisp version 2"
when
    $b : Imperson( age == 18 || == 19  )
then
    Degree x = chance.getDegree();
    System.out.println( "Y " + x );  // 1.0
    map.put( "Y", x.getValue() );
end


rule "Imp extension"
when
    $b : Imperson( name   ~== "philip" || @Imperfect( family=MvlFamilies.PRODUCT )
                          ~== "mark"   ||        // 0.52 = 0.2 + 0.4 - (0.2 * 0.4)
                          ~== "frank"     )      // 0.568 = 0.52 + 0.1 - 0.052
then
    Degree x = chance.getDegree();
    System.out.println( "Z " + x );  // 1.0
    map.put( "Z", x.getValue() );
end


